<?xml version="1.0"?>
<project xmlns:ivy="antlib:fr.jayasoft.ivy.ant" name="JMesa" default="compile" basedir=".">

	<!-- build settings -->
	<property name="build.dir" value="build" />
	<property name="build.classes.dir" location="${build.dir}/classes" />
	<property name="test.dir" location="${build.dir}/test" />
	<property name="test.classes.dir" location="${test.dir}/classes" />
	<property name="test.data.dir" location="${test.dir}/data" />
	<property name="test.reports.dir" location="${test.dir}/reports" />

	<!-- set up the distribution targets -->
	<property name="dist.dir" location="dist" />
	<property name="project.name" value="jmesa" />
	<property name="project.version" value="2.2.1" />
	<property name="project.name-ver" value="${project.name}-${project.version}" />
	<property name="target.name" value="${project.name-ver}.jar" />
	<property name="target.jar" location="${dist.dir}/${target.name}" />
	
	<property name="build.debug" value="true" />

	<!-- pattern of source files to copy -->
	<property name="source.files.tocopy" value="**/*.properties" />

	<target name="init">
		<mkdir dir="${build.dir}" />
		<mkdir dir="${build.classes.dir}" />
		<mkdir dir="${dist.dir}" />
	</target>

    <target name="test-init">
        <mkdir dir="${test.dir}" />
        <mkdir dir="${test.classes.dir}" />
        <mkdir dir="${test.data.dir}" />
        <mkdir dir="${test.reports.dir}" />
    </target>

    <target name="clean">
		<delete includeemptydirs="true">
			<fileset dir="${build.dir}" />
			<fileset dir="${dist.dir}" />
		</delete>
	</target>

	<target name="classpaths" depends="ivy-retrieve">
		<path id="compile.classpath">
			<fileset dir="${ivy.lib.dir}/compile" includes="*.jar" />
		</path>

		<path id="test.compile.classpath">
			<fileset dir="${ivy.lib.dir}/test" includes="*.jar" />
			<pathelement location="${target.jar}" />
		</path>

		<path id="test.classpath">
			<path refid="test.compile.classpath" />
			<pathelement location="${test.classes.dir}" />
		</path>
	</target>

	<target name="compile" depends="classpaths">
		<echo message="You are using java version ${java.version}" />
		<javac destdir="${build.classes.dir}" 
			debug="${build.debug}" 
			includeantruntime="false" 
			srcdir="src">
			<classpath refid="compile.classpath" />
		</javac>
        <copy todir="${build.classes.dir}">
            <fileset dir="src" includes="${source.files.tocopy}"/>
        </copy>
	</target>
	
    <target name="test-compile" depends="jar">
        <echo message="You are using java version ${java.version}" />
        <javac destdir="${test.classes.dir}" 
            debug="${build.debug}" 
            includeantruntime="true" 
            srcdir="test">
            <classpath refid="test.compile.classpath" />
        </javac>
        <copy todir="${test.classes.dir}">
            <fileset dir="test" includes="${source.files.tocopy}"/>
        </copy>
    </target>

	<target name="jar" depends="compile">
		<jar destfile="${target.jar}">
		    <fileset dir="${build.classes.dir}" />		
		</jar>
	</target>
	
	<target name="unit-tests" depends="test-compile">
		<junit printsummary="true" haltonfailure="true">
			<classpath refid="test.classpath"/>
			 <batchtest todir="${test.data.dir}">
			 	<fileset dir="${test.classes.dir}">
			 	   <include name="**/*Test.class"/>
			 	</fileset>
			 </batchtest>
		</junit>
	</target>

    <target name="javadocs">
        <mkdir dir="${dist.dir}/docs" />

        <javadoc sourcepath="src" 
            destdir="${dist.dir}/docs" 
            windowtitle="${project.name}" 
            additionalparam="-breakiterator" 
            source="1.5" 
            linksource="true" 
            access="package" 
            author="true" 
            version="true" 
            use="true" 
            defaultexcludes="true">

            <doctitle>
                <![CDATA[<h1>JMesa</h1>]]>
            </doctitle>

            <classpath refid="compile.classpath" />

            <packageset dir="src">
                <include name="org/jmesa/**" />
            </packageset>
            
            <link href="http://java.sun.com/j2se/1.5.0/docs/api" />
        </javadoc>
    </target>

	<target name="ivy-init" depends="init,test-init">
		<property name="ivy.lib.dir" location="${build.dir}/ivy/lib" />
		<mkdir dir="${ivy.lib.dir}/compile" />
		<mkdir dir="${ivy.lib.dir}/test" />
		<ivy:configure file="${basedir}/ivyconf.xml" />
	</target>

	<target name="ivy-resolve" depends="ivy-init">
		<ivy:resolve />
	</target>

	<target name="ivy-retrieve" depends="ivy-resolve">
		<ivy:retrieve pattern="${ivy.lib.dir}/[conf]/[artifact]-[revision].[ext]" sync="true" />
	</target>

    <target name="ivy-publish" depends="jar">
        <ivy:publish resolver="local" conf="master" pubrevision="${project.version}" overwrite="true" artifactspattern="${dist.dir}/[artifact]-[revision].[ext]" />
    </target>

	<target name="ivy-clean-cache">
		<delete dir="${user.home}/.ivy/cache" />
	</target>

</project>
