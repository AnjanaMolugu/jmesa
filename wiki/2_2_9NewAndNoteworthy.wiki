    
 * Modified the !RowEvent interface to not include the Row class. The Row class is still available on the !AbstractRowEvent, which was the only place it should have been included. It is an implementation convenience to have the Row object available and should not have been on the interface. This was discovered on the [http://groups.google.com/group/jmesa/browse_thread/thread/680d327a30021911 google groups]  and I wanted to release the fix as soon as I could.

 * Created servlet filter to set the request and response in a thread local object. This is useful for frameworks that are trying to hide the request and response objects. 

First setup the filter:
{{{
<filter>
    <filter-name>TableFacadeFilter</filter-name>
    <filter-class>org.jmesa.facade.filter.TableFacadeFilter</
filter-class>
</filter>
<filter-mapping>
    <filter-name>TableFacadeFilter</filter-name>
    <url-pattern>/*</url-pattern>
</filter-mapping> 
}}}

Then use a static import to get at the request and response:

{{{
import static org.jmesa.facade.filter.TableFacadeFilter.FilterThreadLocal.getHttpServletRequest;
import static org.jmesa.facade.filter.TableFacadeFilter.FilterThreadLocal.getHttpServletResponse;
...

TableFacade tableFacade = TableFacadeFactory.createTableFacade(id, getHttpServletRequest());
tableFacade.setExportTypes(getHttpServletResponse(), CSV, JEXCEL, PDF);
...
}}}

 * Enhanced !ItemUtils.getItemValue() to pull the value from the original bean, if not defined as a column property, when using the tags. See the [Tags] page under "Tags bean value" for more information.
 * Included the jmesa.tld in the META-INF directory of the distribution jar file.
 * Declared more correct header information in jmesa.tld file. Also ran formatter on file.
 * Factory class to instantiate !TableFacade. The factory does not do anything special, although I am going to start encouraging developers to use that so when JMesa hooks into other frameworks it would be a one stop shopping for the various !TableFacade implementations.

An example would look like this:

{{{
TableFacade tableFacade = TableFacadeFactory.createTableFacade(id, request);
}}}

