The State interface is used to set and retrieve the table [Limit]. Implementations will set the Limit so that it can be retrieved at a later time. This is useful so a user can return to a specific table with it filtered, sorted, and paged exactly like they left it.

==== Example ===
All you have to do is set the stateAttr to the parameter to look for in the request to tip the table off that. 

For example in the [TableFacade] just pass in the name of the parameter to use:
{{{
TableFacade facade = new TableFacadeImpl(id, request, maxRows, items, "name.firstName", "name.lastName", "term", "career");
facade.setStateAttr("restore");
}}}

The same goes for the [Tags TableTag]:
{{{
<jmesa:table 
        id="basic" 
        stateAttr="restore"
        >
}}}

As you can see in the following example, by passing in a parameter of "restore=true" then the table is rendered in the same way that you left it. That is really all there is too it! 

http://extremecomponents.googlepages.com/basic.png

*Note:* Just be sure that you have a unique table id for each table that you define. Technically the Limit object for each table is stored in the users session keyed by the table id. If the tables are not unique then you will overwrite one Limit with another.

=== UML ===

http://extremecomponents.googlepages.com/state.png








