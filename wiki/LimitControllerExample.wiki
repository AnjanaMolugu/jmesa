*NOTE: I no longer recommend building tables this way.* The preferred way to build a table is using the [TableFacade] or using the [Tags tag library]. The facade does use the following methodology, but this is considered a low level coding technique that should only be used for JMesa developers. It should not be necessary to use this technique to build your tables.

If you are rendering html then pass the view into the servlet request. If you are exporting then just set the export directly on the response. The following example is using Spring, but there is nothing Spring specific happening.

{{{
 protected ModelAndView handleRequestInternal(HttpServletRequest request, HttpServletResponse response)
            throws Exception {
    ModelAndView mv = new ModelAndView(successView);

    WebContext webContext = new HttpServletRequestWebContext(request);
    CoreContext coreContext = limitCoreContext.getCoreContext(webContext);
    Limit limit = coreContext.getLimit();

    if (limit.isExportable()) {
        String type = limit.getExport().getType();
        if (type.equals(HtmlTableUsingTableFactory.CSV)) {
            new CsvTableUsingTableFactory().render(response, webContext, coreContext);
            return null;
        }
    }

    Object presidents = new HtmlTableUsingComponentFactory().render(webContext, coreContext);
    mv.addObject("presidents", presidents);

    return mv;
}
}}}