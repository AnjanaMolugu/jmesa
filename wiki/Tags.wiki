_The following technique is available as of the JMesa 2.1 release._

JMesa now has a complete tag library! The tags should be very intuitive and is a very similar facade to the [TableFacade].

*Update:* I was looking at the difference between the [TableFacade] and the tags and I was not happy with the fact that I let the facade specific attributes leak into the !TableTag. I wanted to have the !TableTag only include table specific attributes.  I also wanted to make the tags and facade work and feel the same as they are trying to accomplish the same abstraction. So now there is a new !TableFacadeTag, although the logic is the same. Simply move the proper attributes to the facade tag and everything will work as expected (see example below). You will also need to get the new jmesa.tld.

An example and more documentation can be found here:
 * [TagsExample Tags Example]

One note I would like to make though is I learned from the eXtremeTable that using a filter to export the table is not a good idea. The support costs are just too high with trying to make it work for different environments. The problem was you had to parse through the JSP file for the sole purpose of generating the table in the correct markup. Doing that made outputting the data in the response very difficult and buggy. It is much easier and safer to handle the exports in the controller. However, if you use the new [TableFacade] it makes working with exports pretty trivial.

*Note: The tag library uses !SimpleTag, which requires JSP 2.0 or above.*

=== Example ===
The following will define the html table.

{{{
<jmesa:tableFacade
    id="pres" 
    items="${presidents}"
    maxRows="8"
    exportTypes="csv,excel"
    maxRowsIncrements="8,16,24"
    stateAttr="restore"
    var="bean"
    >
    <jmesa:table 
        captionKey="presidents.caption" 
        width="600px"
        >		
        <jmesa:row>	
            <jmesa:column property="name.firstName" titleKey="presidents.firstName">
                <a href="http://www.whitehouse.gov/history/presidents/">${bean.name.firstName}</a>
            </jmesa:column>
            <jmesa:column property="name.lastName" title="Last Name"/>
            <jmesa:column property="term"/>
            <jmesa:column property="career"/>
            <jmesa:column property="born" filterable="false" pattern="MM/yyyy" cellEditor="org.jmesa.view.editor.DateCellEditor"/>
        </jmesa:row>
    </jmesa:table> 
</jmesa:tableFacade>
}}}

To generate the exports use the [TableFacade].

{{{
TableFacade tableFacade = new TableFacadeImpl(id, request, items, "name.firstName", "name.lastName", "term", "career");
tableFacade.setExportTypes(response, "csv", "excel");

Limit limit = tableFacade.getLimit();
if (limit.isExportable()) {
    tableFacade.render();
    return null;
}
}}}

=== The following are the tags defined by JMesa. ===

==== !TableFacadeTag ====
|| *Attribute* || *Type* || *Description* ||
|| id || String || The unique table id ||
|| [Items items] || Collection || The Collection of beans or maps ||
|| limit || [Limit] || The Limit object to use ||
|| maxRows || int || The max page rows ||
|| maxRowsIncrements || String || The toolbar max rows increments ||
|| stateAttr || String || The parameter to use for the [State] ||
|| var || String || The value to hold the current bean ||
|| exportTypes || String || The comma separated list of exports ||

==== !TableTag ====
|| *Attribute* || *Type* || *Description* ||
|| caption || String || The caption for the table ||
|| captionKey || String || The value to find in the messages ||
|| theme || String ||  ||
|| width || String ||  ||
|| style || String ||  ||
|| styleClass || String ||  ||
|| border || String ||  ||
|| cellpadding || String ||  ||
|| cellspacing || String ||  ||

==== !RowTag ====
|| *Attribute* || *Type* || *Description* ||
|| highlighter || boolean ||  ||
|| onclick || String ||  ||
|| onmouseout || String ||  ||
|| onmouseover || String ||  ||

==== !ColumnTag ====
|| *Attribute* || *Type* || *Description* ||
|| property || String || The bean or map attribute ||
|| title || String || The column header title ||
|| titleKey || String || The value to find in the messages ||
|| cellEditor || String || The [Editors CellEditor] class ||
|| pattern || String || The pattern to inject into the CellEditor class ||
|| filterable || boolean ||  ||
|| sortable || boolean ||  ||
|| width || String ||  ||
|| style || String ||  ||
|| styleClass || String ||  ||

















